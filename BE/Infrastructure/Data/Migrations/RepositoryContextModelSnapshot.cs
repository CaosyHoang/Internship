// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Infrastructure.Department", b =>
                {
                    b.Property<Guid>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người tạo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày tạo");

                    b.Property<string>("DepartmentCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("Mã phòng ban");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasComment("Tên phòng ban");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Mô tả");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người sửa");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày sửa");

                    b.HasKey("DepartmentId");

                    b.HasIndex(new[] { "DepartmentCode" }, "UK_Department_DepartmentCode")
                        .IsUnique();

                    b.HasIndex(new[] { "DepartmentName" }, "UK_Department_DepartmentName")
                        .IsUnique();

                    b.ToTable("Department", (string)null);

                    b.HasComment("Danh sách phòng ban");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Infrastructure.Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(255)")
                        .HasComment("Địa chỉ");

                    b.Property<string>("BankAccount")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Tài khoản ngân hàng");

                    b.Property<string>("BankName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Tên ngân hàng");

                    b.Property<string>("Branch")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Chi nhánh");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người tạo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày tạo");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasComment("Ngày sinh");

                    b.Property<Guid?>("DepartmentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Địa chỉ email");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("char(20)")
                        .IsFixedLength()
                        .HasComment("Mã nhân viên");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Họ tên nhân viên");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasComment("Giới tính 0-Nam, 1-Nữ, 2-Khác");

                    b.Property<DateOnly?>("IdentityDate")
                        .HasColumnType("date")
                        .HasComment("Ngày cấp");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)")
                        .HasComment("Số CMTND, CCCD");

                    b.Property<string>("IndentityPlace")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Nơi cấp");

                    b.Property<string>("LandlineNumber")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("Số điện thoại cố định");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người sửa");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày sửa");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("Số điện thoại");

                    b.Property<Guid?>("PositionId")
                        .HasColumnType("char(36)");

                    b.Property<decimal?>("Salary")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)")
                        .HasComment("Lương");

                    b.HasKey("EmployeeId");

                    b.HasIndex(new[] { "DepartmentId" }, "IDX_Employee_DepartmentId");

                    b.HasIndex(new[] { "PositionId" }, "IDX_Employee_PositionId");

                    b.HasIndex(new[] { "Address" }, "UK_Employee_Address")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UK_Employee_Email")
                        .IsUnique();

                    b.HasIndex(new[] { "EmployeeCode" }, "UK_Employee_EmployeeCode")
                        .IsUnique();

                    b.HasIndex(new[] { "FullName" }, "UK_Employee_FullName")
                        .IsUnique();

                    b.HasIndex(new[] { "IdentityNumber" }, "UK_Employee_IdentityNumber")
                        .IsUnique();

                    b.HasIndex(new[] { "PhoneNumber" }, "UK_Employee_PhoneNumber")
                        .IsUnique();

                    b.ToTable("Employee", (string)null);

                    b.HasComment("Danh sách nhân viên");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Infrastructure.Position", b =>
                {
                    b.Property<Guid>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người tạo");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày tạo");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasComment("Mô tả");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasComment("Người sửa");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime")
                        .HasComment("Ngày sửa");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasComment("Mã chức vụ");

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasComment("Tên chức vụ");

                    b.HasKey("PositionId");

                    b.HasIndex(new[] { "PositionCode" }, "UK_Position_PositionCode")
                        .IsUnique();

                    b.HasIndex(new[] { "PositionName" }, "UK_Position_PositionName")
                        .IsUnique();

                    b.ToTable("Position", (string)null);

                    b.HasComment("Danh sách chức vụ");

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_general_ci");
                });

            modelBuilder.Entity("Infrastructure.Employee", b =>
                {
                    b.HasOne("Infrastructure.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId");

                    b.HasOne("Infrastructure.Position", "Position")
                        .WithMany("Employees")
                        .HasForeignKey("PositionId");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Infrastructure.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Infrastructure.Position", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
